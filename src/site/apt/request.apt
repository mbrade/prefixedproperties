~~
~~
~~ Copyright (c) 2010, Marco Brade
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions are met:
~~
~~ * Redistributions of source code must retain the above copyright notice, this
~~   list of conditions and the following disclaimer.
~~
~~ * Redistributions in binary form must reproduce the above copyright notice,
~~   this list of conditions and the following disclaimer in the documentation
~~   and/or other materials provided with the distribution.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
~~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
~~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
~~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
~~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
~~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
~~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
~~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
~~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
~~

							[null]
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are permitted provided that the following conditions are met:
~~
~~ * Redistributions of source code must retain the above copyright notice, this
~~   list of conditions and the following disclaimer.
~~
~~ * Redistributions in binary form must reproduce the above copyright notice,
~~   this list of conditions and the following disclaimer in the documentation
~~   and/or other materials provided with the distribution.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
~~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
~~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
~~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
~~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
~~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
~~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
~~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
~~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
~~


Request depended properties

  PrefixedProperties can filter properties by an environment and use Fallbacks. But what if you have properties that are request depended. Lets say you have a webservice and you want to have different behaviors per user. With PrefixedProperties you have the possibility to change the prefix configuration per request.
  Instead of using the <<setDefaultPrefix>> Method use the <<setConfiguredPrefix>> which has the same functionality like the other method but only works for the current Thread. Configurations of other Threads would be unchanged.
  
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

  //GenderPrefixConfig contains Male with prefix m and Female with prefix f
  static final PrefixedProperties props = PrefixedProperties.createCascadingPrefixProperties(new StagingPrefixConfig(), new GenderPrefixConfig());
  ...
  props.setDefaultPrefix("test");//sets the default property for the StagingEnvironment to test
  props.setProperty("key1", "value1");
  props.setProperty("test.key2", "testvalue2");
  props.setProperty("test.f.key2", "female test value2");
  props.setProperty("test.m.key2", "male test value2");
  
  //one Threads might call
  props.setConfiguredPrefix(GenderPrefixConfig.MALE);
  props.get("key2"); //will return 'male test value2'
  
  //another Thread might call
  props.setConfiguredPrefix(GenderPrefixConfig.FEMALE);
  props.get("key2"); //will return 'female test value2'
  
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
